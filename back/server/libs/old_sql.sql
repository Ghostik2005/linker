
update roles set NAME = 'Суперадмин' where id = 34 returning name
update roles set NAME = 'Сводильщик' where id = 9 returning name


ALTER TABLE PRC ADD 
IN_WORK Integer NOT NULL;
COMMIT;
UPDATE PRC 
SET IN_WORK = '-1' 
WHERE IN_WORK IS NULL;
commit;

create ASC 
INDEX IDX_ID_WORK on PRC 
(IN_WORK);
COMMIT;

CREATE TABLE R_LNK
(
  SH_PRC TSTR32 NOT NULL,
  ID_SPR TINT32,
  ID_VND TINT32,
  ID_TOVAR TSTR32,
  C_TOVAR TSTR255,
  C_ZAVOD TSTR255,
  DT TDATETIME,
  OWNER TSTR255,
  DT_R TDATETIME,
  USER_R TINT32,
  CONSTRAINT PK_R_LNK PRIMARY KEY (SH_PRC)
);
commit;

CREATE INDEX R_LNK_IDX1 ON R_LNK (ID_SPR);
CREATE INDEX R_LNK_IDX2 ON R_LNK (ID_VND,ID_TOVAR);
CREATE DESCENDING INDEX R_LNK_IDX3 ON R_LNK (DT);
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON R_LNK TO  SYSDBA WITH GRANT OPTION;
commit;

CREATE INDEX IDX_SPR_ZAVOD1 ON SPR_ZAVOD (C_ZAVOD);
CREATE INDEX IDX_DV1 ON DV (ACT_INGR);
commit;

ALTER TABLE LNK ADD CHANGE_DT Timestamp;
ALTER TABLE PRC ADD CHANGE_DT Timestamp;
commit;

SET TERM ^ ;
ALTER TRIGGER LNK_BI0 ACTIVE
BEFORE INSERT POSITION 0
AS
begin
  if (new.dt is Null) then
    new.dt = current_timestamp;
    new.CHANGE_DT = current_timestamp;
  new.newflag = 1;
end^
SET TERM ; ^
commit;

SET TERM ^ ;
ALTER TRIGGER PRC_BI0 ACTIVE
BEFORE INSERT POSITION 0
AS
begin
  new.dt = current_timestamp;
  new.CHANGE_DT = current_timestamp;
end^
SET TERM ; ^
commit;

SET TERM ^;
CREATE TRIGGER LNK_BU FOR LNK
ACTIVE BEFORE UPDATE POSITION 0
AS
BEGIN
    new.CHANGE_DT = current_timestamp;
END^
SET TERM ;^
commit;

SET TERM ^;
CREATE TRIGGER PRC_BU FOR PRC
ACTIVE BEFORE UPDATE POSITION 0
AS
BEGIN
    new.CHANGE_DT = current_timestamp;
END^
SET TERM ;^
commit;

CREATE INDEX IDX_LNK1 ON LNK
  (C_TOVAR);
CREATE DESCENDING INDEX IDX_LNK2 ON LNK
  (C_TOVAR);
CREATE DESCENDING INDEX IDX_LNK3 ON LNK
  (CHANGE_DT);
commit;

SET TERM ^ ;
ALTER TRIGGER PRC_BU ACTIVE
BEFORE UPDATE POSITION 0
AS
BEGIN
    if (new.SH_PRC != old.SH_PRC or new.ID_VND != old.ID_VND or new.ID_TOVAR != old.ID_TOVAR or new.N_FG != old.N_FG or new.N_CENA != old.N_CENA or
        new.C_TOVAR != old.C_TOVAR or new.C_ZAVOD != old.C_ZAVOD or new.ID_ORG != old.ID_ORG or new.C_INDEX != old.C_INDEX or new.DT != old.DT) 
    THEN new.CHANGE_DT = current_timestamp;
END^
SET TERM ; ^

SET TERM ^ ;
ALTER TRIGGER LNK_BI0 ACTIVE
BEFORE INSERT POSITION 0
AS
begin
  new.CHANGE_DT = current_timestamp;
  new.newflag = 1;
  if (new.dt is Null) then new.dt = current_timestamp;
end^
SET TERM ; ^

ALTER TABLE SPR_BARCODE ADD 
CH_DATE Timestamp;

SET TERM ^;
CREATE TRIGGER SPR_BARCODE_BI FOR SPR_BARCODE
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    new.CH_DATE = CURRENT_TIMESTAMP;
END^
SET TERM ;^
commit;

CREATE TABLE SPR_ROLES
(
  ID_ROLE INTEGER,
  SKIPPED SMALLINT DEFAULT 0 NOT NULL,
  SPRADD SMALLINT DEFAULT 0 NOT NULL,
  SPREDIT SMALLINT DEFAULT 0 NOT NULL,
  ADM SMALLINT DEFAULT 0 NOT NULL,
  VENDORADD SMALLINT DEFAULT 0 NOT NULL,
  USERADD SMALLINT DEFAULT 0 NOT NULL,
  USERDEL SMALLINT DEFAULT 0 NOT NULL,
  LNKDEL SMALLINT DEFAULT 0 NOT NULL
);
CREATE UNIQUE INDEX SPR_ROLES_IDX1 ON SPR_ROLES (ID_ROLE);
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON SPR_ROLES TO  SYSDBA WITH GRANT OPTION;
commit;

INSERT INTO SPR_ROLES (ID_ROLE, SKIPPED, SPRADD, SPREDIT, ADM, VENDORADD, USERADD, USERDEL, LNKDEL) VALUES (0, 0, 0, 0, 0, 0, 0, 0, 0);
INSERT INTO SPR_ROLES (ID_ROLE, SKIPPED, SPRADD, SPREDIT, ADM, VENDORADD, USERADD, USERDEL, LNKDEL) VALUES (9, 1, 0, 0, 0, 0, 0, 0, 0);
INSERT INTO SPR_ROLES (ID_ROLE, SKIPPED, SPRADD, SPREDIT, ADM, VENDORADD, USERADD, USERDEL, LNKDEL) VALUES (10, 1, 1, 1, 1, 1, 0, 0, 1);
INSERT INTO SPR_ROLES (ID_ROLE, SKIPPED, SPRADD, SPREDIT, ADM, VENDORADD, USERADD, USERDEL, LNKDEL) VALUES (34, 1, 1, 1, 1, 1, 1, 1, 1);
INSERT INTO SPR_ROLES (ID_ROLE, SKIPPED, SPRADD, SPREDIT, ADM, VENDORADD, USERADD, USERDEL, LNKDEL) VALUES (35, 1, 1, 1, 1, 1, 1, 1, 1);

ALTER TABLE PRC ADD SOURCE Smallint;

CREATE INDEX IDX_SPR1 ON SPR
  (C_TOVAR);
CREATE DESCENDING INDEX IDX_SPR2 ON SPR
  (C_TOVAR);
commit;
ALTER TABLE SPR_ROLES ADD N_ROLE Varchar(256)
update SPR_ROLES s set s.N_ROLE = 'user' where s.ID_ROLE = 0;
UPDATE SPR_ROLES s SET s.N_ROLE = 'linker' where s.ID_ROLE = 9;
UPDATE SPR_ROLES s SET s.N_ROLE = 'admin' where s.ID_ROLE = 10;
UPDATE SPR_ROLES s SET s.N_ROLE = 'superadmin' where s.ID_ROLE = 34;
UPDATE SPR_ROLES s SET s.N_ROLE = 'qqq' where s.ID_ROLE = 35;

CREATE TABLE A_TEMP_PRC
(
  SH_PRC TSTR32 NOT NULL COLLATE WIN1251, 
  ID_VND TINT32, 
  ID_TOVAR TSTR32, 
  N_CENA TINT32, 
  C_TOVAR TSTR255 COLLATE WIN1251, 
  C_ZAVOD TSTR255 COLLATE WIN1251, 
  ID_ORG TINT32 DEFAULT 0 NOT NULL, 
  SOURCE SMALLINT, 
  BARCODE VARCHAR(255), 
  CONSTRAINT T_PK_PRC PRIMARY KEY (SH_PRC)
);
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON A_TEMP_PRC TO  SYSDBA WITH GRANT OPTION;
 
CREATE INDEX IDX_SPR_BARCODE1 ON SPR_BARCODE (BARCODE);

CREATE TABLE LNK_CODES
(
  PROCESS SMALLINT DEFAULT 0 NOT NULL,
  CODE INTEGER NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  INN VARCHAR(255),
  OWNER VARCHAR(255) NOT NULL

);

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LNK_CODES TO  SYSDBA WITH GRANT OPTION;
commit;

CREATE TABLE LNK_EXCLUDES
(
  PROCESS SMALLINT DEFAULT 0 NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  OPTIONS VARCHAR(255) DEFAULT '01' NOT NULL,
  OWNER VARCHAR(255) NOT NULL

);

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LNK_EXCLUDES TO  SYSDBA WITH GRANT OPTION;

commit;

ALTER TABLE PRC ADD UIN Varchar(255);
commit;
ALTER TABLE A_TEMP_PRC ADD UIN Varchar(255);
commit;
CREATE INDEX IDX_PRC1 ON PRC (UIN);
commit;

CREATE TABLE PRC_TASKS
(
  UIN VARCHAR(255) NOT NULL COLLATE WIN1251,
  SOURCE SMALLINT,
  CALLBACK VARCHAR(255) COLLATE WIN1251,
  DT TDATETIME,
  CONSTRAINT T_PK_TASKS PRIMARY KEY (UIN)
);
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON PRC_TASKS TO SYSDBA WITH GRANT OPTION;
commit;

CREATE TABLE ISSUE
(
  ID TINT32 NOT NULL,
  C_ISSUE TSTR255 NOT NULL,
  FLAG SMALLINT,
  CONSTRAINT PK_ISSUE PRIMARY KEY (ID)
);
CREATE INDEX IDX_IS1 ON ISSUE (c_ISSUE);
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ISSUE TO  SYSDBA WITH GRANT OPTION;
commit;

CREATE TABLE SPR_ISSUE
(
  ID_SPR TINT32 NOT NULL,
  ID_IS TSTR32 NOT NULL
);
CREATE UNIQUE INDEX IS_IDX1 ON SPR_ISSUE (ID_SPR,ID_IS);
CREATE UNIQUE INDEX IS_IDX2 ON SPR_ISSUE (ID_IS,ID_SPR);
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON SPR_ISSUE TO  SYSDBA WITH GRANT OPTION;
commit;

ALTER TABLE LNK ADD 
SOURCE Smallint


CREATE TABLE BRAK_MAIL_TEXT
(
  LINK_FILE VARCHAR(100) NOT NULL,
  MAIL_TEXT BLOB SUB_TYPE 0,
  DELETED SMALLINT DEFAULT 0 NOT NULL ,
  CONSTRAINT PK_BRAK_MAIL_TEXT PRIMARY KEY (LINK_FILE)
);

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BRAK_MAIL_TEXT TO  SYSDBA WITH GRANT OPTION;


create index prc_idx_id_tovar on prc (id_tovar);

create index lnk_idx_id_tovar on lnk (id_tovar);

create index lnk_idx_id_vnd on lnk (id_vnd);

alter table vnd add column permit smallint default 1;

